generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Audiobook {
  id          String    @id @default(cuid())
  title       String
  author      String
  coverImage  String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  chapters    Chapter[]
}

model Chapter {
  id            String         @id @default(cuid())
  title         String
  content       String
  orderIndex    Int
  audiobookId   String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  audioSegments AudioSegment[]
  audiobook     Audiobook      @relation(fields: [audiobookId], references: [id], onDelete: Cascade)

  @@index([audiobookId])
  @@index([orderIndex])
}

model AudioSegment {
  id          String   @id @default(cuid())
  voiceId     String
  audioUrl    String?
  startTime   Float
  endTime     Float
  textSegment String
  chapterId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  chapter     Chapter  @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  @@index([chapterId])
  @@index([voiceId])
}

model UserPreference {
  id              String   @id @default(cuid())
  userId          String   @unique
  selectedVoiceId String
  playbackSpeed   Float    @default(1.0)
  volume          Float    @default(0.7)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId])
}
